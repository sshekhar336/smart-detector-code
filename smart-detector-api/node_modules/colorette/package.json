{
  "_args": [
    [
      {
        "raw": "colorette@1.1.0",
        "scope": null,
        "escapedName": "colorette",
        "name": "colorette",
        "rawSpec": "1.1.0",
        "spec": "1.1.0",
        "type": "version"
      },
      "D:\\ReactProjects\\FaceDetector\\online-face-detector-api\\node_modules\\knex"
    ]
  ],
  "_from": "colorette@1.1.0",
  "_hasShrinkwrap": false,
  "_id": "colorette@1.1.0",
  "_location": "/colorette",
  "_nodeVersion": "12.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/colorette_1.1.0_1561765575404_0.30068890487149136"
  },
  "_npmUser": {
    "name": "jorgebucaran",
    "email": "mail@jorgebucaran.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "colorette@1.1.0",
    "scope": null,
    "escapedName": "colorette",
    "name": "colorette",
    "rawSpec": "1.1.0",
    "spec": "1.1.0",
    "type": "version"
  },
  "_requiredBy": [
    "/knex"
  ],
  "_resolved": "https://registry.npmjs.org/colorette/-/colorette-1.1.0.tgz",
  "_shasum": "1f943e5a357fac10b4e0f5aaef3b14cdc1af6ec7",
  "_shrinkwrap": null,
  "_spec": "colorette@1.1.0",
  "_where": "D:\\ReactProjects\\FaceDetector\\online-face-detector-api\\node_modules\\knex",
  "author": {
    "name": "Jorge Bucaran"
  },
  "bugs": {
    "url": "https://github.com/jorgebucaran/colorette/issues"
  },
  "dependencies": {},
  "description": "Color your terminal using pure idiomatic JavaScript.",
  "devDependencies": {
    "nyc": "14.1.1",
    "testmatrix": "0.1.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-6S062WDQUXi6hOfkO/sBPVwE5ASXY4G2+b4atvhJfSsuUUhIaUKlkjLe9692Ipyt5/a+IPF5aVTu3V5gvXq5cg==",
    "shasum": "1f943e5a357fac10b4e0f5aaef3b14cdc1af6ec7",
    "tarball": "https://registry.npmjs.org/colorette/-/colorette-1.1.0.tgz",
    "fileCount": 5,
    "unpackedSize": 9022,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdFqbICRA9TVsSAnZWagAAH4gP/3bcg2JVKGtPI8+Zkzez\nJeFAHKGz6sSXBkA6nNj6d/6xGorXmnxFuaZjrECf8c+0Lyu2AAY8lJP+3I6m\nEWkCgA2Mwyh3DT3UF4tbbZBmERtr0VDDxeiSMhkYhXNVc99+N1FSy9RydLaL\n1I3DBOjRJMOcxA7GdryYBbOwTWhYxfGOU+xtpqmeTtNiJ4s8Gbt5hjDlKO1r\nGgzIBJQq4lZ1MFtEgbDw6t/unfIlpwnkmfB7yySohGIlL3C16+oSjR/xOc+i\nnxV2oZeQQXyJt+tKK11YraTwLDzTIfVvueLcBjCjdUr3enjoPQudoFAO8ad0\n9kwMnBKIptr0hGBgJ4S/0FY1nQ37Xo+Af+zwxW2HUfd0DTzw/npdkKFwAFFq\nauuLaT/+lqdFSHx+oZnxDCzPiu37EpZ3faTALErgogzllnfhLRnaKCAfD8CN\nypwzMYlCimpX7LLiHlOUkdFs5oxMgi47mspYnhrXULMhI3di60he3h6+ykwa\naw7eaiVs1pZjkvQy43HAnFTc2leyGEqy+RJOZ159vZZiUoliu9g8MPmxpP6i\ne2doHb0IahYRBrKxIVCN33PDiXCYokAYk+uZF49gyNMFiG4FgyrNIFSYMVt6\nk7ekAQqzG0F+M6Hr31M8K4Q+M5T9gqSsSltgLwA+CGrNACv+13II1GQu8fJG\n/lQC\r\n=jxHv\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "index.js",
    "colorette.d.ts"
  ],
  "gitHead": "51c9ae34397366733056e7a0e367ce02c1c62b5f",
  "homepage": "https://github.com/jorgebucaran/colorette",
  "keywords": [
    "colorette",
    "terminal",
    "styles",
    "color",
    "ansi"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jorgebucaran",
      "email": "mail@jorgebucaran.com"
    }
  ],
  "name": "colorette",
  "optionalDependencies": {},
  "readme": "# Colorette [![](https://img.shields.io/npm/v/colorette.svg?label=&color=0080ff)](https://www.npmjs.org/package/colorette) [![CI](https://img.shields.io/travis/jorgebucaran/colorette.svg?label=)](https://travis-ci.org/jorgebucaran/colorette)\n\n> Color your terminal using pure idiomatic JavaScript.\n\nColorette is a Node.js library for embellishing your CLI tools with colors and styles using [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code).\n\n- Up to ~10x faster than the alternatives ([run the benchmarks](#run-the-benchmarks)).\n- No wonky prototype-based method chains.\n- Automatic color support detection.\n- ~80 LOC and no dependencies.\n- [`NO_COLOR`](https://no-color.org) friendly.\n\n## Quickstart\n\n```console\nnpm i colorette\n```\n\nLoad the [styles](#styles) you need. [Here](#supported-styles)'s the list of the styles you can use.\n\n```js\nconst { red, blue, bold } = require(\"colorette\")\n```\n\nWrap your strings in one or more styles to produce the finish you're looking for.\n\n```js\nconsole.log(bold(blue(\"Engage!\")))\n```\n\nOr mix it with [template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals) to interpolate variables, expressions and create multi-line strings easily.\n\n```js\nconsole.log(`\n  Beets are ${red(\"red\")},\n  Plums are ${blue(\"blue\")},\n  ${bold(\"Colorette!\")}.\n`)\n```\n\nUsing `console.log`'s [string substitution](https://nodejs.org/api/console.html#console_console_log_data_args) can be useful too!\n\n```js\nconsole.log(bold(\"Total: $%f\"), 1.99)\n```\n\nYou can even nest styles without breaking existing escape codes.\n\n```js\nconsole.log(red(`Red Shirt ${blue(\"Blue Shirt\")} Red Shirt`))\n```\n\nFeeling adventurous? Try the [pipeline operator](https://github.com/tc39/proposal-pipeline-operator).\n\n```js\nconsole.log(\"Make it so!\" |> bold |> blue)\n```\n\n## Supported styles\n\nColorette supports the standard and bright color variations out-of-the-box. For true color support see [this issue](https://github.com/jorgebucaran/colorette/issues/27).\n\n| Colors  | Background Colors | Bright Colors | Bright Background Colors | Modifiers         |\n| ------- | ----------------- | ------------- | ------------------------ | ----------------- |\n| black   | bgBlack           | blackBright   | bgBlackBright            | dim               |\n| red     | bgRed             | redBright     | bgRedBright              | **bold**          |\n| green   | bgGreen           | greenBright   | bgGreenBright            | hidden            |\n| yellow  | bgYellow          | yellowBright  | bgYellowBright           | _italic_          |\n| blue    | bgBlue            | blueBright    | bgBlueBright             | underline         |\n| magenta | bgMagenta         | magentaBright | bgMagentaBright          | ~~strikethrough~~ |\n| cyan    | bgCyan            | cyanBright    | bgCyanBright             | reset             |\n| white   | bgWhite           | whiteBright   | bgWhiteBright            |                   |\n| gray    |                   |               |                          |                   |\n\n## API\n\n### <code><i>style</i>(string)</code>\n\nReturns a string wrapped in the corresponding ANSI escape code.\n\n```js\nred(\"Red Alert\") //=> \\u001b[31mRed Alert\\u001b[39m\n```\n\n### `options.enabled`\n\nColorette is enabled if your terminal supports color, `FORCE_COLOR=1` or if `NO_COLOR` isn't in the environment, but you can always override it when you need to.\n\n```js\nconst { options } = require(\"colorette\")\n\noptions.enabled = false\n```\n\n## Run the benchmarks\n\n```\nnpm i -C bench && node bench\n```\n\n<pre>\n# Using Styles\nchalk × 14,468 ops/sec\ncolorette × 901,148 ops/sec\n\n# Combining Styles\nchalk × 44,067 ops/sec\ncolorette × 2,566,778 ops/sec\n\n# Nesting Styles\nchalk × 40,165 ops/sec\ncolorette × 506,494 ops/sec\n</pre>\n\n## License\n\n[MIT](LICENSE.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jorgebucaran/colorette.git"
  },
  "scripts": {
    "release": "v=$npm_package_version; git commit -am $v && git tag -s $v -m $v && git push && git push --tags && npm publish",
    "test": "nyc -r lcov testmatrix test/index.js"
  },
  "types": "colorette.d.ts",
  "version": "1.1.0"
}
